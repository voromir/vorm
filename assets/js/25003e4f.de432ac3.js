"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2838],{4351:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2024/05/29/setting-up","metadata":{"permalink":"/blog/2024/05/29/setting-up","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-05-29-setting-up.md","source":"@site/blog/2024-05-29-setting-up.md","title":"Environment setup","description":"You will need a terminal.","date":"2024-05-29T00:00:00.000Z","tags":[{"label":"Terminal","permalink":"/blog/tags/terminal"},{"label":"MacOS","permalink":"/blog/tags/mac-os"},{"label":"Environment","permalink":"/blog/tags/environment"}],"readingTime":3.635,"hasTruncateMarker":false,"authors":[{"name":"Dani Vorobiev","title":"Front End Engineer","url":"https://voromir.github.io/about/","imageURL":"https://i.ibb.co/YTPxvhW/voro-profile.png","key":"dani"}],"frontMatter":{"authors":["dani"],"tags":["Terminal","MacOS","Environment"]},"unlisted":false,"nextItem":{"title":"What is and MDX file?","permalink":"/blog/2024/05/26/mdx-trial"}},"content":"## You will need a terminal.\\n\\nAs a developer, you gonna spend some time with your terminal. Even if you like GUI. You will run tests, install packages and use Git, for exaple. Terminal is one of our main tools and it\'s nice to have a visually pleasant and powerful terminal instead of borring and limited default one. In this post I gonna explain how I like to configure and personalize my Terminal and the main concepts thet we need to know: what is the shell, what is the terminal, what is a CLI, what different kinds of shelld do we have and how to take the better advantage of our terminal and shell configuration.\\n\\n## Terminal or Shell?\\n\\nThere are a lot of terms that usually are used to refer to the same thing: Terminal, Shell, CLI and Console. But not everything is the same. To better understand what we\'re about to do we need to understand the difference between Shell and Terminal.\\n\\nDifferences between terminal and shell. Different shells:\\n-sh (Bourne Shell)\\n-bash (Bourne Again Shell)\\n-zsh (Z Shell)\\n-csh (C Shell)\\n-ksh (Korn Shell)\\n\\nDifferent terminals:\\n-GNOME Terminal\\n-Konsole\\n-xterm\\n-iTerm2\\n-Kitty\\n-Warp (with AI)\\n\\nOn macOS, [iTerm](https://iterm2.com/features.html) is the most popular terminal emulator. While it resembles a classic console, it offers powerful features like split views, multiple tabs, customizable hotkeys, and extensive configuration options. Accessing the Preferences menu in iTerm reveals a wide range of settings you can adjust to personalize your experience.\\n\\niTerm key features:\\n\\n-Multiple tabs (with color options), split views.\\n-Find and filter content in the terminal\\n\\n- Session Managment. Reopen all the tabs exactly as they were.\\n- BONUS: broadcast inputs\\n\\nTip: depending on your default permission settings you can experience the \\"operation not permitted error\\". If this happens to you, you need to go to your MacOS setting, select Privacy and Security and give Full disk acess to iTerm2.\\n\\n> WARNING: Modifying the iTerm color scheme may prevent text colors from displaying correctly. If you encounter this issue, check the `Minimum contrast` property in your profile settings and reduce its value.\\n\\nShell: Interprets and executes commands.\\nTerminal: Provides the interface for interacting with the shell.\\n\\nCommands are programs stored on the disk. When a user types a command, the shell searches for it in the directories specified by the PATH environment variable. If found, the shell attempts to execute the command.\\n\\nThe PATH variable is a list of directories that the shell searches for commands. Users can modify the PATH variable to add or remove directories from the search path. This allows users to customize the commands that are available to them.\\n\\nThe terminal in Linux is very powerful. There are even linux distros without Desktop Manager, like Arch Linux.\\n\\n## UNIX based systems\\n\\nWe often hear about UNIX based systems and we know that MacOS and Linux are UNIX based systems. But what is really a UNIX system? Indeed, UNIX has a lot of history behind\\n\\nWhat shell am I using?\\n\\n```bash\\necho $SHELL\\n```\\n\\nAs of macOS Catalina (10.15), the default shell for macOS was changed from Bash to Zsh due to licensing reasons (GPLv3).\\n\\n## Other types of shells:\\n\\nCloud shell: is a browser-based command-line interface provided by cloud service providers to manage cloud resources, run scripts, debug code, and experiment with new tools or technologies. It\'s common to use cloud shell to interact with services like DynamoDB, S3, and BigQuery.\\n\\nReverse Shell: A reverse shell is a type of cyberattack technique where an attacker establishes a connection back to a compromised victim\'s machine. This connection allows the attacker to gain remote access and execute commands on the victim\'s system, essentially taking control of the machine. It\'s not a technology in itself but rather a method used by attackers to exploit vulnerabilities and gain unauthorized access.\\n\\n## Unleash your terminal\\n\\n_Unleash your terminal_ is the slogan of [Oh My Zsh](https://ohmyz.sh/), an open source community driven Zsh manager. This is one of the quickest an easiest ways to get a powerful yet beautiful terminal in a few steps. They promise you:\\n_Once installed, your terminal shell will become the talk of the town or your money back!_\\n\\n-MY ZSH + Fonts + iTerm\\n-Aliases with custom scripts\\n\\n-Mac plugins: Alfred, Rectangle\\n\\n## Chrome plugins\\n\\n-Chrome plugins: JSON, CSS Outline, DarkMode, ShewTabNumbers, React DeveloprTools, ModHeader, Redux DevTools."},{"id":"/2024/05/26/mdx-trial","metadata":{"permalink":"/blog/2024/05/26/mdx-trial","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-05-26-mdx-trial.mdx","source":"@site/blog/2024-05-26-mdx-trial.mdx","title":"What is and MDX file?","description":"Empowering the text","date":"2024-05-26T00:00:00.000Z","tags":[{"label":"mdx","permalink":"/blog/tags/mdx"},{"label":"markdown","permalink":"/blog/tags/markdown"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":2.16,"hasTruncateMarker":false,"authors":[{"name":"Dani Vorobiev","title":"Front End Engineer","url":"https://voromir.github.io/about/","imageURL":"https://i.ibb.co/YTPxvhW/voro-profile.png","key":"dani"}],"frontMatter":{"authors":["dani"],"tags":["mdx","markdown","docusaurus"]},"unlisted":false,"prevItem":{"title":"Environment setup","permalink":"/blog/2024/05/29/setting-up"}},"content":"import BouncingBall from \\"../src/components/BouncingBall\\";\\nimport LiveCodeExample from \\"../src/components/LiveCodeExample\\";\\n\\n\\n## Empowering the text\\n\\nMarkdown is a tool that allows you to write using an easy-to-write plain text format, that is converted to structurally valid HTML.\\nOriginally, it was intended to easly create content for the web. And it does it great. It\'s very intuitive so you can start using it just after learning the basic syntax.\\nOnce you write your plain text with proper Markdown syntax, the Markdown parser will convert it into valid HTML that reflects the intended layout and style.\\nAnd lots of great platforms are powered by markdown syntax: Obsidian, Trello, Notion, Stack Overflow, GitHub,\\nJekyll, Docusaurus and much more. So if you\'re getting in the software development world, you will be using\\nmarkdown for sure.\\n\\nWith Markdown youcan write text, lists, tables, code blocks, images, links, and much more. Let\'s put here\\nan example of each one:\\n\\n> Text that is a quote\\n\\n1. First item\\n2. Second item\\n\\n```javascript\\nconsole.log(\\"Hello, world!\\");\\n```\\n\\n[Docusaurus](https://docusaurus.io) is a project for easily building, deploying, and maintaining open source project websites.\\n\\nThese are some of the basic features of markdown. But there\'s much more. You can finde more detailed information\\nin the [Markdown Guide](https://www.markdownguide.org/) and in the [GitHub Markdown Guide](https://guides.github.com/features/mastering-markdown/).\\n\\n## From MD to MDX\\n\\nBut what if you want to add some interactivity to your markdown file? You can use MDX for that. MDX is a markdown\\nfile that can contain JSX code. Isn\'t that great? If you use React, you know that JSX is a syntax extension for JavaScript that allows you to write HTML elements\\ninside your JavaScript code. Once you get used to it, it gets really easy to write pages with this syntax. So with the MDX basically you can write React\\ncomponents inside your markdown file. Here goes an example:\\n\\n<BouncingBall />\\n\\nWhich in the code looks like this:\\n\\n```jsx\\nimport BouncingBall from \\"../src/components/BouncingBall\\";\\n\\n// All the markdown content\\n\\n<BouncingBall />;\\n```\\n\\nBasically, you just import the component and use it as you would use it in a React component. You can also declare variables and pass props to the components.\\nSo you can create a very interactive page with just a markdown file.\\n\\n## More cool stuff!\\n\\nBeing able to use JSX in markdown files gives you a lot of power. You can create almost anything you want. You can create a live code editor, for example. Let\'s have a look:\\n\\n<LiveCodeExample />\\n\\nHow cool is that? You can write code and see the result in real-time. And you can do this in a markdown file."}]}}')}}]);